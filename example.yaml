# This example provides a basic configuration and description based on the M5STACK components
# For further configuration you should visit the ESPHome docs https://esphome.io
# Every line starting with a # can be removed.

## BASIC CONFIGURATION
esphome:
  name: samsung_ac
  friendly_name: Climate

# Select chipset and board configuration - in this case M5STACK
esp32:
  board: m5stack-atom

# [Optional] - Create web interface where you can control the AC from your web browser (without Home Assistant)
web_server:
  port: 80

# Enable logging
logger:
  level: INFO
  logs:
    component: ERROR # Remove the "Your component takes to long to respond warning"

# Enable native API for communication with Home Assistant, this can be removed if you do not plan to use it with Home Assistant
api:

# Enable OTA firmware update, you will be able to upload the firmware over WiFi without connecting the device by cables
ota:

# Setup your WiFi password
wifi:
  ssid: "My WiFi Name" # !!!CHANGE ME!!!
  password: "My WiFi Password" # !!!CHANGE ME!!!

captive_portal:

# Specify pins used by the board to comunicate with RS485 board - in this case M5STACK
uart:
  tx_pin: GPIO19
  rx_pin: GPIO22
  # For older devices it could also be 2400. But you should start with 9600.
  baud_rate: 9600
  parity: EVEN

## SAMSUNG AC CONFIGURATION

# Import custom component from GitHub
external_components:
  - source: github://lanwin/esphome_samsung_ac@stable # use @main if you want the latest development (possibly unstable?)
    components: [samsung_ac]

# Configuration of AC component
samsung_ac:

  #debug_log_messages: true < With this row, all read data from the bus is printed on the terminal
   
  # Capabilities configure the features alle devices of your AC system have (all parts of this section are optional). 
  # All capabilities are off by default, you need to enable only those your devices have.
  # You can override or configure them also on a per devices basis (look below for that).
  capabilities: 
    vertical_swing: true
    horizontal_swing: true
    # Presets define special AC modes like Windfree and so on. 
    # The following modes are available: sleep, quiet, fast, longreach, windfree
    presets: 
      # short version
      quiet: true
      # long version - allows to locilize names
      quiet:
        name: "Makes no sound"
        enabled: true

  devices:
    # Skip everything below on the first run! Wait a minute, watch your ESPHome logs until you see the "Discovered devices:" section and you see some addresses:
    # For NASA devices it looks like this (with 4 indoor devices): 
    #   Indoor:  20.00.00, 20.00.01, 20.00.02, 20.00.03
    # For NonNASA devices it looks like this (with 2 indoor devices): 
    #   Indoor:  00, 01
    # You need this addresses for the the sections below. If you see only a "-" then you should visit the troubleshooting section in the readme. 

    # Repeat everything below for each indoor device address you see in your logs
    - address: "20.00.00" # Indoor device address 
      # Each property below is optional (climate, room_temperature etc.) - you can delete those which you dont need.
      # For the names we suggest to choose a combination of room name and the thing it controls. 

      # Configures/overrides the capabilites for this devices. 
      # Look above for all options.
      capabilities:
        horizontal_swing: false # This device have no h swing. 

      # Creates climate control in Home Assistant. A climate control combines multiple of the controls below (like temperature, mode etc.)
      climate:
        name: "Kitchen climate"

      # The controls directly below are all included in the climate control. Its adviced to only add the climate control and skip the extra controls.
      room_temperature:
        name: "Kitchen temperature"
      target_temperature:
        name: "Kitchen target temperature"
      power:
        name: "Kitchen power"
      mode:
        name: "Kitchen mode"

      # If your AC sits near or inside the ceiling, the reported room temperature is often a little bit heigher then whats 
      # measured below. This property can be used to correct that value.
      room_temperature_offset: -1.4

      # Only supported on NASA devices
      room_humidity:
        name: "Kitchen humidity"

      # Only supported on NASA based heatpumps
      water_temperature:
        name: "Warm water"
      outdoor_temperature: # Should be used with outdoor device address
        name: "Outdoor temperature"
      power_consumption: # Should be used with outdoor device address
        name: "Power consumption"
      energy_consumption: # Should be used with outdoor device address
        name: "Energy consumption"
      energy_produced: # Indoor
        name: "Energy Produced"
      indoor_power_consumption: # Never seen on my setup
        name: "Indoor consumption"

      # custom climate allow to define custom addresses and behaviour for many climate components
      # Addresses are more or less described on the file xlxs (link)
      # enabling debug_log_messages: true under the samsung_ac section, you can look at sent data directly from ESP web loger. 
      # Most of temperatura are in celsius with a /10 formula.
      custom_climate:
        - name: "Water heater"
          status_addr: 0x4237 # mandatory address regarding status temperature
          set_addr: 0x4235    # mandatory address regarding setpoint temperature
          set_min: 40         # optional, default = 25째C
          set_max: 55         # optional, default = 65째C
          enable_addr: 0x4065 # mandatory enabling address, only 1/0 should be written there. Look at mode sub section
                              # By default the value is set = 1 when HA send a value > 0.
          preset:         
            addr: 0x4066      # Address for presets
            ClimatePreset0Value: 1 # CLIMATE_PRESET_NONE => 1 Standard
            ClimatePreset1Value: -1 # CLIMATE_PRESET_HOME 
            ClimatePreset2Value: -1 # CLIMATE_PRESET_AWAY 
            ClimatePreset3Value: 2 # CLIMATE_PRESET_BOOST => 2 Power
            ClimatePreset4Value: -1 # CLIMATE_PRESET_COMFORT 
            ClimatePreset5Value: 0 # CLIMATE_PRESET_ECO => 0 Eco
            ClimatePreset6Value: -1 # CLIMATE_PRESET_SLEEP 
            ClimatePreset7Value: 3 # CLIMATE_PRESET_ACTIVITY  => 3 Force
        - name: "Heating"
          status_addr: 0x4238
          set_addr: 0x4247
          set_min: 8          # large enough to let both ranges for heating (25-65)째C and cooling (8-25)째C
          set_max: 65
          enable_addr: 0x4000
          mode:
            addr: 0x4001      # In this case the single ClimateMode is splitted between the enable_addr and the mode->addr
                              # https://esphome.io/api/namespaceesphome_1_1climate#a8716cd7ed01ceb7ccedfa2f7b47a39d2
                              # As before, the enable_addr is set = 1 for each mode > 0. If a value of enable is read = 0 from nasa,
                              # a value of CLIMATE_MODE_OFF is sent to HA regardless of the value of the register mode->addr
            #ClimateMode0Value:  # Default -1 = CLIMATE_MODE_OFF is not translated into mode->addr
            #ClimateMode1Value:  # Default -1 = CLIMATE_MODE_HEAT_COOL is not translated into mode->addr     
            ClimateMode2Value: 1 # Default -1. Setting =1 the value CLIMATE_MODE_COOL==2 is translated as 1 into mode->addr
            ClimateMode3Value: 4 # Default -1. Setting = 4 the value CLIMATE_MODE_HEAT==3 is translated as 4 into mode->addr
            #ClimateMode4Value: -1
            #ClimateMode5Value: -1
            ClimateMode6Value: 0 # Default -1. Setting = 4 the value CLIMATE_MODE_AUTO==6 is translated as 0 into mode->addr
